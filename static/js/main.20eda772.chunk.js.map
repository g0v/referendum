{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onComplete","result","console","log","data","model","Survey","title","showQuestionNumbers","showCompletedPage","goNextPageAutomatic","pagePrevText","pageNextText","completeText","pages","questions","type","name","choices","react_default","a","createElement","className","survey_react","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOAuHeA,2BAjHb,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA+FRQ,WAAa,SAACC,GACZC,QAAQC,IAAIF,EAAOG,OAjGF,OA6FjBX,EAAKY,MAAQ,IAAIC,QA3FJ,CACXC,MAAO,wDACPC,oBAAqB,MACrBC,mBAAmB,EACnBC,qBAAqB,EACrBC,aAAc,qBACdC,aAAc,eACdC,aAAc,2BACdC,MAAO,CAAC,CACNP,MAAO,IACPQ,UAAW,CAAC,CACVC,KAAM,aACNC,KAAM,KACNV,MAAO,qMACPW,QAAS,CAAC,eAAM,yBAEjB,CACDX,MAAO,IACPQ,UAAW,CAAC,CACVC,KAAM,aACNC,KAAM,KACNV,MAAO,2QACPW,QAAS,CAAC,eAAM,yBAEjB,CACDX,MAAO,IACPQ,UAAW,CAAC,CACVC,KAAM,aACNC,KAAM,KACNV,MAAO,mWACPW,QAAS,CAAC,eAAM,yBAEjB,CACDX,MAAO,KACPQ,UAAW,CAAC,CACVC,KAAM,aACNC,KAAM,KACNV,MAAO,6IACPW,QAAS,CAAC,eAAM,yBAEjB,CACDX,MAAO,KACPQ,UAAW,CAAC,CACVC,KAAM,aACNC,KAAM,KACNV,MAAO,6UACPW,QAAS,CAAC,eAAM,yBAEjB,CACDX,MAAO,KACPQ,UAAW,CAAC,CACVC,KAAM,aACNC,KAAM,KACNV,MAAO,6OACPW,QAAS,CAAC,eAAM,yBAEjB,CACDX,MAAO,KACPQ,UAAW,CAAC,CACVC,KAAM,aACNC,KAAM,KACNV,MAAO,+NACPW,QAAS,CAAC,eAAM,yBAEjB,CACDX,MAAO,KACPQ,UAAW,CAAC,CACVC,KAAM,aACNC,KAAM,KACNV,MAAO,+JACPW,QAAS,CAAC,eAAM,yBAEjB,CACDX,MAAO,KACPQ,UAAW,CAAC,CACVC,KAAM,aACNC,KAAM,KACNV,MAAO,qWACPW,QAAS,CAAC,eAAM,yBAEjB,CACDX,MAAO,KACPQ,UAAW,CAAC,CACVC,KAAM,aACNC,KAAM,KACNV,MAAO,kTACPW,QAAS,CAAC,eAAM,4BAxFLzB,wEAoGV,IACCY,EAAUT,KAAVS,MACR,OACEc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACE,EAAA,OAAD,CACElB,MAAOA,EACPL,WAAYJ,KAAKI,qBA3GTwB,cCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOZ,EAAAC,EAAAC,cAACW,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.20eda772.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const data = {\n      title: \"2018 全國性公民投票案\",\n      showQuestionNumbers: 'off',\n      showCompletedPage: false,\n      goNextPageAutomatic: true,\n      pagePrevText: '前一案',\n      pageNextText: '跳過',\n      completeText: '投入票匭',\n      pages: [{\n        title: '7',\n        questions: [{\n          type: \"radiogroup\",\n          name: \"07\",\n          title: \"你是否同意以「平均每年至少降低1%」之方式逐年降低火力發電廠發電量？\",\n          choices: [\"同意\", \"不同意\"]\n        }],\n      }, {\n        title: '8',\n        questions: [{\n          type: \"radiogroup\",\n          name: \"08\",\n          title: \"您是否同意確立「停止新建、擴建任何燃煤發電廠或發電機組（包括深澳電廠擴建）」之能源政策？\",\n          choices: [\"同意\", \"不同意\"]\n        }]\n      }, {\n        title: '9',\n        questions: [{\n          type: \"radiogroup\",\n          name: \"09\",\n          title: \"你是否同意政府維持禁止開放日本福島311核災相關地區，包括福島與周遭4縣市（茨城、櫪木、群馬、千葉）等地區農產品及食品進口？\",\n          choices: [\"同意\", \"不同意\"]\n        }]\n      }, {\n        title: '10',\n        questions: [{\n          type: \"radiogroup\",\n          name: \"10\",\n          title: \"你是否同意民法婚姻規定應限定在一男一女的結合？\",\n          choices: [\"同意\", \"不同意\"]\n        }]\n      }, {\n        title: '11',\n        questions: [{\n          type: \"radiogroup\",\n          name: \"11\",\n          title: \"你是否同意在國民教育階段內（國中及國小），教育部及各級學校不應對學生實施性別平等教育法施行細則所定之同志教育？\",\n          choices: [\"同意\", \"不同意\"]\n        }]\n      }, {\n        title: '12',\n        questions: [{\n          type: \"radiogroup\",\n          name: \"12\",\n          title: \"你是否同意以民法婚姻規定以外之其他形式來保障同性別二人經營永久共同生活的權益？\",\n          choices: [\"同意\", \"不同意\"]\n        }]\n      }, {\n        title: '13',\n        questions: [{\n          type: \"radiogroup\",\n          name: \"13\",\n          title: \"你是否同意，以「台灣」（Taiwan）為全名申請參加所有國際運動賽事及2020年東京奧運？\",\n          choices: [\"同意\", \"不同意\"]\n        }]\n      }, {\n        title: '14',\n        questions: [{\n          type: \"radiogroup\",\n          name: \"14\",\n          title: \"您是否同意，以民法婚姻章保障同性別二人建立婚姻關係？\",\n          choices: [\"同意\", \"不同意\"]\n        }]\n      }, {\n        title: '15',\n        questions: [{\n          type: \"radiogroup\",\n          name: \"15\",\n          title: \"您是否同意，以「性別平等教育法」明定在國民教育各階段內實施性別平等教育，且內容應涵蓋情感教育、性教育、同志教育等課程？\",\n          choices: [\"同意\", \"不同意\"]\n        }]\n      }, {\n        title: '16',\n        questions: [{\n          type: \"radiogroup\",\n          name: \"16\",\n          title: \"是否同意：廢除電業法第95條第1項，即廢除「核能發電設備應於中華民國一百十四年以前，全部停止運轉」之條文？\",\n          choices: [\"同意\", \"不同意\"]\n        }]\n      }]\n    };\n\n    this.model = new Survey.Model(data);\n  }\n\n  onComplete = (result) => {\n    console.log(result.data);\n  }\n\n  render() {\n    const { model } = this;\n    return (\n      <div className=\"App\">\n        <Survey.Survey\n          model={model}\n          onComplete={this.onComplete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}